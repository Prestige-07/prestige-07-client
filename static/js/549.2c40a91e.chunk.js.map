{"version":3,"file":"static/js/549.2c40a91e.chunk.js","mappings":"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","sources":["components/Global/Global.styled.jsx","redux/reporting/reportingSelectors.js","components/AdminPage/ReportPage/ReportTable/ReportTable.styled.jsx","components/AdminPage/ReportPage/ReportTable/ReportTable.jsx","components/AdminPage/ReportPage/ReportSearchForm/ReportSearchForm.styled.jsx","components/AdminPage/ReportPage/ReportSearchForm/ReportSearchForm.jsx","pages/Report/Report.jsx","utils/formatedDate.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  max-width: 480px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const AdminContainer = styled.div`\n  width: 100%;\n  max-width: 1600px;\n  @media screen and (min-width: 768px) {\n    padding: 0 30px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const Section = styled.section`\n  padding-top: 80px;\n  padding-bottom: ${props => props.paddingBottom && `80px`};\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  ${props =>\n    props.position &&\n    `position: absolute;\n    top: 20px;\n    right: 20px;\n  `};\n\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n  box-shadow: var(--button-shadow);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  border-radius: 25px;\n  border: var(--button-border);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const MainLinkButton = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-height: 50px;\n  min-width: 200px;\n\n  box-shadow: var(--button-shadow);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  @media screen and (min-width: 1200px) {\n    font-size: 12px;\n  }\n\n  color: var(--white-color);\n  background-color: transparent;\n\n  border: var(--button-border);\n  border-radius: 25px;\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n`;\n","export const selectOrders = state => state.reports.items;\n\nexport const selectEmployees = state => state.reports.employees;\n\nexport const selectPayments = state => state.reports.payments;\n\nexport const selectIsLoading = state => state.reports.isLoading;\n\nexport const selectError = state => state.reports.error;\n","import styled from '@emotion/styled';\nimport { FiDownload } from 'react-icons/fi';\n\nexport const TableContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  max-width: 100%;\n`;\n\nexport const TableWrapper = styled.div`\n  max-width: 100%;\n  overflow-x: auto;\n  border-radius: 8px;\n`;\n\nexport const TableThumb = styled.div`\n  flex-basis: calc(50% - 10px);\n  margin-top: 20px;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  overflow: hidden;\n`;\n\nexport const FlexContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n  text-align: center;\n  font-size: 20px;\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  border-spacing: 0;\n  background-color: var(--table-background);\n  color: black;\n`;\n\nexport const TableHead = styled.thead`\n  background-color: var(--table-head);\n  color: #fff;\n  text-align: left;\n`;\n\nexport const TableRow = styled.tr`\n  &:nth-of-type(even) {\n    background-color: var(--table-row);\n  }\n`;\n\nexport const TableHeader = styled.th`\n  padding: 10px;\n`;\n\nexport const TableData = styled.td`\n  padding: 10px;\n`;\n\nexport const TableCellServices = styled.td`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n\n  p {\n    margin: 0;\n    padding: 5px 0;\n  }\n`;\n\nexport const DownloadBtn = styled.button`\n  margin-left: auto;\n  width: 50px;\n  height: 50px;\n  background-color: var(--white-color);\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  opacity: 0.5;\n\n  transition: opacity var(--transition);\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const DownloadIcon = styled(FiDownload)`\n  width: 30px;\n  height: 30px;\n  color: var(--download-color);\n`;\n","import ExcelJS from 'exceljs';\nimport { useSelector } from 'react-redux';\n\nimport {\n  selectOrders,\n  selectEmployees,\n  selectPayments,\n} from '../../../../redux/reporting/reportingSelectors';\n\nimport { formatedDate } from '../../../../utils/formatedDate';\n\nimport {\n  TableContainer,\n  TableWrapper,\n  TableThumb,\n  FlexContainer,\n  Title,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableData,\n  TableCellServices,\n  DownloadBtn,\n  DownloadIcon,\n} from './ReportTable.styled';\n\nexport const ReportingTable = () => {\n  const orders = useSelector(selectOrders);\n  const employees = useSelector(selectEmployees);\n  const payments = useSelector(selectPayments);\n\n  const handleDownloadReport = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheetOrders = workbook.addWorksheet('Виконані замовлення');\n    const worksheetEmployeesPayments = workbook.addWorksheet(\n      'Виплата працівникам'\n    );\n    const worksheetPayments = workbook.addWorksheet('Дані про платежі');\n\n    worksheetOrders.addRow([\n      'Час заїзду',\n      \"Об'єкт\",\n      'Контакти клієнта',\n      'Послуги',\n      'Вартість, грн',\n      'Спосіб оплати',\n      'Адміністратор',\n      'Працівник',\n    ]);\n\n    orders.forEach(order => {\n      worksheetOrders.addRow([\n        formatedDate(order.orderDate),\n        order.serviceObject,\n        order.clientPhone,\n        order.services.map(service => service.name).join(', '),\n        order.discountedCostOrder,\n        order.payment,\n        order.administrator,\n        order.washer,\n      ]);\n    });\n\n    worksheetEmployeesPayments.addRow(['Ім`я', 'грн']);\n\n    employees.forEach(employee => {\n      worksheetEmployeesPayments.addRow([employee.name, employee.payment]);\n    });\n\n    worksheetPayments.addRow(['Категорія', 'Сума, грн']);\n\n    worksheetPayments.addRow(['Всього каса:', payments.totalPayments]);\n    worksheetPayments.addRow(['Всього готівкою:', payments.totalCash]);\n    worksheetPayments.addRow(['Всього терміналом:', payments.totalCard]);\n    worksheetPayments.addRow([\n      'Всього заробітна плата:',\n      payments.totalEmployeesPayments,\n    ]);\n    worksheetPayments.addRow(['Дохід:', payments.profit]);\n\n    const buffer = await workbook.xlsx.writeBuffer();\n    const blob = new Blob([buffer], {\n      type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    });\n    const url = URL.createObjectURL(blob);\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'report.xlsx';\n    a.click();\n\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <TableContainer>\n      {orders && orders.length > 0 && (\n        <>\n          <DownloadBtn type=\"button\" onClick={handleDownloadReport}>\n            <DownloadIcon />\n          </DownloadBtn>\n          <Title>Звітність за обраний період</Title>\n          <TableWrapper>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableHeader>Час заїзду</TableHeader>\n                  <TableHeader>Об'єкт</TableHeader>\n                  <TableHeader>Контакти клієнта</TableHeader>\n                  <TableHeader>Послуги</TableHeader>\n                  <TableHeader>Вартість, грн</TableHeader>\n                  <TableHeader>Спосіб оплати</TableHeader>\n                  <TableHeader>Адміністратор</TableHeader>\n                  <TableHeader>Працівник</TableHeader>\n                </TableRow>\n              </TableHead>\n              <tbody>\n                {orders.map(order => (\n                  <TableRow key={order._id}>\n                    <TableData>{formatedDate(order.orderDate)}</TableData>\n                    <TableData>{order.serviceObject}</TableData>\n                    <TableData>{order.clientPhone}</TableData>\n                    <TableCellServices>\n                      {order.services.map(service => (\n                        <p key={service._id}>{service.name}</p>\n                      ))}\n                    </TableCellServices>\n                    <TableData>{order.discountedCostOrder}</TableData>\n                    <TableData>{order.payment}</TableData>\n                    <TableData>{order.administrator}</TableData>\n                    <TableData>{order.washer}</TableData>\n                  </TableRow>\n                ))}\n              </tbody>\n            </Table>\n          </TableWrapper>\n        </>\n      )}\n      <FlexContainer>\n        {employees && employees.length > 0 && (\n          <TableThumb>\n            <Title>Заробітна плата</Title>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableHeader>Ім'я</TableHeader>\n                  <TableHeader>грн</TableHeader>\n                </TableRow>\n              </TableHead>\n              <tbody>\n                {employees.map(employee => (\n                  <TableRow key={employee.name}>\n                    <TableData>{employee.name}</TableData>\n                    <TableData>{employee.payment}</TableData>\n                  </TableRow>\n                ))}\n              </tbody>\n            </Table>\n          </TableThumb>\n        )}\n        {payments && (\n          <TableThumb>\n            <Title>Розрахунок</Title>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableHeader>Категорія</TableHeader>\n                  <TableHeader>грн</TableHeader>\n                </TableRow>\n              </TableHead>\n              <tbody>\n                <TableRow>\n                  <TableData>Всього каса:</TableData>\n                  <TableData>{payments.totalPayments}</TableData>\n                </TableRow>\n                <TableRow>\n                  <TableData>Всього готівкою:</TableData>\n                  <TableData>{payments.totalCash}</TableData>\n                </TableRow>\n                <TableRow>\n                  <TableData>Всього терміналом:</TableData>\n                  <TableData>{payments.totalCard}</TableData>\n                </TableRow>\n                <TableRow>\n                  <TableData>Всього заробітна плата:</TableData>\n                  <TableData>{payments.totalEmployeesPayments}</TableData>\n                </TableRow>\n                <TableRow>\n                  <TableData>Дохід:</TableData>\n                  <TableData>{payments.profit}</TableData>\n                </TableRow>\n              </tbody>\n            </Table>\n          </TableThumb>\n        )}\n      </FlexContainer>\n    </TableContainer>\n  );\n};\n","import styled from '@emotion/styled';\nimport { TextField } from '@mui/material';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  justify-content: center;\n  gap: 30px;\n  padding: 25px;\n  margin-bottom: 40px;\n  color: var(--black-color);\n  background-color: var(--white-color);\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const DateLabel = styled.label``;\n\nexport const Input = styled(TextField)`\n  width: 100%;\n`;\n","import { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { getReportingByDates } from '../../../../redux/reporting/reportingOperations';\n\nimport { MainButton } from 'components/Global/Global.styled';\nimport { SearchForm, DateLabel, Input } from './ReportSearchForm.styled';\n\nexport const ReportSearchForm = () => {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      startDate: '',\n      endDate: '',\n    },\n    onSubmit: values => {\n      dispatch(getReportingByDates(values));\n    },\n  });\n  return (\n    <SearchForm onSubmit={formik.handleSubmit}>\n      <DateLabel>\n        Початок\n        <Input\n          required\n          type=\"date\"\n          id=\"startDate\"\n          name=\"startDate\"\n          value={formik.values.startDate}\n          onChange={formik.handleChange}\n          variant=\"standard\"\n          className=\"field\"\n        />\n      </DateLabel>\n      <DateLabel>\n        Кінець\n        <Input\n          required\n          type=\"date\"\n          id=\"endDate\"\n          name=\"endDate\"\n          value={formik.values.endDate}\n          onChange={formik.handleChange}\n          variant=\"standard\"\n          className=\"field\"\n        />\n      </DateLabel>\n      <MainButton type=\"submit\" color=\"var(--black-color)\">\n        Пошук\n      </MainButton>\n    </SearchForm>\n  );\n};\n","import { useSelector } from 'react-redux';\n\nimport { Section } from 'components/Global/Global.styled';\nimport { Loading } from 'components/Loading/Loading';\nimport { ReportingTable } from 'components/AdminPage/ReportPage/ReportTable/ReportTable';\nimport { ReportSearchForm } from 'components/AdminPage/ReportPage/ReportSearchForm/ReportSearchForm';\n\nimport { selectIsLoading } from '../../redux/reporting/reportingSelectors';\n\nconst ReportingPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <Section paddingBottom={true}>\n      <ReportSearchForm />\n      <ReportingTable />\n      {isLoading && <Loading />}\n    </Section>\n  );\n};\n\nexport default ReportingPage;\n","export function formatedDate(unformatedDate) {\n  const dateTime = new Date(unformatedDate);\n\n  const date = dateTime.toLocaleDateString('uk-UA', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n  });\n\n  const time = dateTime.toLocaleTimeString('uk-UA', {\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n\n  return `${date} ${time}`;\n}\n"],"names":["MainContainer","styled","_templateObject","_taggedTemplateLiteral","AdminContainer","_templateObject2","Section","_templateObject3","props","paddingBottom","SectionTitle","_templateObject4","MainButton","_templateObject5","position","margin","color","MainLinkButton","_templateObject6","selectOrders","state","reports","items","selectEmployees","employees","selectPayments","payments","selectIsLoading","isLoading","TableContainer","TableWrapper","TableThumb","FlexContainer","Title","Table","TableHead","_templateObject7","TableRow","_templateObject8","TableHeader","_templateObject9","TableData","_templateObject10","TableCellServices","_templateObject11","DownloadBtn","_templateObject12","DownloadIcon","FiDownload","_templateObject13","ReportingTable","orders","useSelector","handleDownloadReport","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","workbook","worksheetOrders","worksheetEmployeesPayments","worksheetPayments","buffer","blob","url","a","_context","prev","next","ExcelJS","addWorksheet","addRow","forEach","order","formatedDate","orderDate","serviceObject","clientPhone","services","map","service","name","join","discountedCostOrder","payment","administrator","washer","employee","totalPayments","totalCash","totalCard","totalEmployeesPayments","profit","xlsx","writeBuffer","sent","Blob","type","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","stop","apply","arguments","_jsxs","children","length","_Fragment","_jsx","onClick","_id","SearchForm","DateLabel","Input","TextField","ReportSearchForm","dispatch","useDispatch","formik","useFormik","initialValues","startDate","endDate","onSubmit","values","getReportingByDates","handleSubmit","required","id","value","onChange","handleChange","variant","className","Loading","unformatedDate","dateTime","Date","date","toLocaleDateString","day","month","year","time","toLocaleTimeString","hour","minute","concat"],"sourceRoot":""}