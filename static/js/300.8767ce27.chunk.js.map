{"version":3,"file":"static/js/300.8767ce27.chunk.js","mappings":"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","sources":["components/Forms/Forms.styled.jsx","components/Global/Global.styled.jsx","components/Modals/Modal.styles.jsx","components/Modals/ModalLayout.jsx","components/AdminPage/EmployeesPage/EmployeesList/EmployeesList.styled.jsx","utils/calculateAgeToNow.js","components/AdminPage/EmployeesPage/EmployeesItem/EmployeesItem.styled.jsx","components/AdminPage/EmployeesPage/ImagesList/ImagesList.styled.jsx","components/Modals/ModalAddEmployeeImage/ModalAddEmployeeImage.jsx","components/AdminPage/EmployeesPage/ImagesItem/ImagesItem.styled.jsx","components/Modals/ModalOpenImage/ModalOpenImage.styled.jsx","components/Modals/ModalOpenImage/ModalOpenImage.jsx","components/AdminPage/EmployeesPage/ImagesItem/ImagesItem.jsx","components/AdminPage/EmployeesPage/ImagesList/ImagesList.jsx","components/AdminPage/EmployeesPage/EmployeesItem/EmployeesItem.jsx","components/AdminPage/EmployeesPage/EmployeesList/EmployeesList.jsx","components/Modals/ModalAddEmployee/ModalAddEmployee.jsx","pages/Employees/Employees.jsx","redux/employees/employeesSelectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Select, TextField, Checkbox, MenuItem } from '@mui/material';\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  text-align: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 12px;\n  color: black;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  max-width: 100%;\n  color: var(--label-color);\n  font-size: 12px;\n`;\n\nexport const LabelText = styled.p`\n  margin-bottom: 4px;\n`;\n\nexport const Input = styled(TextField)`\n  width: 100%;\n`;\n\nexport const FormSelect = styled(Select)`\n  width: 100%;\n`;\n\nexport const SelectOption = styled(MenuItem)``;\n\nexport const FormCheckbox = styled(Checkbox)``;\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  max-width: 480px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const AdminContainer = styled.div`\n  width: 100%;\n  max-width: 1600px;\n  @media screen and (min-width: 768px) {\n    padding: 0 30px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const Section = styled.section`\n  padding-top: 80px;\n  padding-bottom: ${props => props.paddingBottom && `80px`};\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  ${props =>\n    props.position &&\n    `position: absolute;\n    top: 20px;\n    right: 20px;\n  `};\n\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n  box-shadow: var(--button-shadow);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  border-radius: 25px;\n  border: var(--button-border);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const MainLinkButton = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-height: 50px;\n  min-width: 200px;\n\n  box-shadow: var(--button-shadow);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  @media screen and (min-width: 1200px) {\n    font-size: 12px;\n  }\n\n  color: var(--white-color);\n  background-color: transparent;\n\n  border: var(--button-border);\n  border-radius: 25px;\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { AiOutlineClose } from 'react-icons/ai';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: var(--backdrop-color);\n  backdrop-filter: blur(10px);\n\n  transition: transform var(--transition), opacity var(--transition),\n    visibility var(--transition);\n\n  visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n  opacity: ${props => (props.isOpen ? '1' : '0')};\n  pointer-events: ${props => (props.isOpen ? 'auto' : 'none')};\n  transform: ${props => (props.isOpen ? 'scale(1)' : 'scale(1.5)')};\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n\n  padding: 30px;\n  max-width: 480px;\n  width: 100%;\n\n  background-color: var(--white-color);\n\n  border: 4px solid var(--accent-color);\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  text-align: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-size: 20px;\n  color: var(--black-color);\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  background-color: transparent;\n  border: none;\n\n  cursor: pointer;\n`;\n\nexport const CloseIcon = styled(AiOutlineClose)`\n  width: 30px;\n  height: 30px;\n`;\n","import { Backdrop, Modal, CloseButton, CloseIcon } from './Modal.styles';\n\nexport const ModalLayout = props => {\n  return (\n    <Backdrop\n      onClick={e => {\n        props.handleBackdropClick && props.handleBackdropClick(e);\n      }}\n      isOpen={props.isOpen}\n    >\n      <Modal>\n        <CloseButton onClick={() => props.handleExitModal()}>\n          <CloseIcon />\n        </CloseButton>\n        {props.children}\n      </Modal>\n    </Backdrop>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 12px;\n  flex-basis: 100%;\n\n  background-color: var(--secondary-bg-color);\n\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc(100% / 2 - 30px);\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc(100% / 3 - 60px);\n  }\n`;\n\nexport const Text = styled.p``;\n\nexport const Edit = styled.button`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n`;\n","export function calculateAgeToNow(date) {\n  const startDate = new Date(date);\n  const endDate = new Date();\n  let years = endDate.getFullYear() - startDate.getFullYear();\n  let months = endDate.getMonth() - startDate.getMonth();\n\n  if (months < 0) {\n    years--;\n    months += 12;\n  }\n\n  return `${years} р. ${months} міс.`;\n}\n","import styled from '@emotion/styled';\nimport { FiEdit, FiSave, FiTrash2 } from 'react-icons/fi';\n\nexport const Item = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 12px 40px 12px 12px;\n  width: 100%;\n\n  background-color: var(--secondary-bg-color);\n\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc(100% / 2 - 15px);\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc(100% / 3 - 20px);\n  }\n`;\n\nexport const Text = styled.p``;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: ${props => props.top};\n  right: ${props => props.right};\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  opacity: 0.4;\n\n  transition: opacity var(--transition);\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const EditIcon = styled(FiEdit)`\n  width: 20px;\n  height: 20px;\n  color: yellow;\n`;\n\nexport const SaveIcon = styled(FiSave)`\n  width: 20px;\n  height: 20px;\n  color: green;\n`;\n\nexport const DeleteIcon = styled(FiTrash2)`\n  width: 20px;\n  height: 20px;\n  color: red;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Select = styled.select`\n  padding-left: 8px;\n  border: none;\n  border-radius: 8px;\n  transition: background-color var(--transition), color var(--transition);\n  :disabled {\n    background-color: transparent;\n    color: var(--white-color);\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled.input`\n  padding-left: 8px;\n  width: 100%;\n  border: none;\n  border-radius: 8px;\n  transition: background-color var(--transition), color var(--transition);\n  :disabled {\n    background-color: transparent;\n    color: var(--white-color);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n`;\n\nexport const AddBtn = styled.button`\n  width: 60px;\n  height: 60px;\n  font-size: 40px;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  opacity: 0.5;\n  transition: var(--transition);\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { ModalLayout } from '../ModalLayout';\nimport { Title } from '../Modal.styles';\nimport { Form, Input } from 'components/Forms/Forms.styled';\nimport { MainButton } from 'components/Global/Global.styled';\n\nimport { addImageToEmployee } from '../../../redux/employees/employeesOperations';\n\nexport const ModalAddEmployeeImage = ({ id, isOpen, handleExitModal }) => {\n  const [image, setImage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('employee', image);\n    dispatch(addImageToEmployee({ id, data: formData }));\n    handleExitModal();\n  };\n\n  return (\n    <ModalLayout handleExitModal={handleExitModal} isOpen={isOpen}>\n      <Title>Додати зображення</Title>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          required\n          type=\"file\"\n          id=\"employee\"\n          name=\"employee\"\n          onChange={e => setImage(e.currentTarget.files[0])}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <MainButton type=\"submit\" color=\"var(--black-color)\" margin={true}>\n          Додати\n        </MainButton>\n      </Form>\n    </ModalLayout>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FiTrash2 } from 'react-icons/fi';\n\nexport const Item = styled.li`\n  position: relative;\n`;\n\nexport const Image = styled.img`\n  width: 60px;\n  height: 60px;\n  object-fit: cover;\n  border-radius: 8px;\n  cursor: pointer;\n  opacity: 0.5;\n  transition: var(--transition);\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const DelBtn = styled.button`\n  position: absolute;\n  top: 0;\n  right: -16px;\n  padding: 0;\n\n  background-color: transparent;\n\n  border: none;\n  cursor: pointer;\n  opacity: 0.5;\n  transition: var(--transition);\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const DelIcon = styled(FiTrash2)`\n  color: red;\n`;\n","import styled from '@emotion/styled';\n\nexport const Image = styled.img`\n  max-height: 85vh;\n  object-fit: contain;\n`;\n","import { ModalLayout } from '../ModalLayout';\nimport { Image } from './ModalOpenImage.styled';\n\nexport const ModalOpenImage = props => {\n  const handleExitModal = () => props.handleExitModal();\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      handleExitModal();\n    }\n  };\n\n  return (\n    <ModalLayout\n      handleExitModal={handleExitModal}\n      handleBackdropClick={handleBackdropClick}\n      isOpen={props.isOpen}\n    >\n      <Image src={props.image} alt=\"Документ\" />\n    </ModalLayout>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Item, Image, DelBtn, DelIcon } from './ImagesItem.styled';\nimport { ModalOpenImage } from 'components/Modals/ModalOpenImage/ModalOpenImage';\n\nimport { deleteImageFromEmployee } from '../../../../redux/employees/employeesOperations';\n\nexport const ImagesItem = ({ employeeId, image }) => {\n  const [isOpenModal, setOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleExitModal = () => setOpenModal(false);\n\n  const handleDeleteImage = imageId => {\n    const confirmDelete = window.confirm(\n      'Ви впевнені, що хочете видалити це зображення?'\n    );\n    if (confirmDelete) {\n      dispatch(\n        deleteImageFromEmployee({\n          id: employeeId,\n          data: { imageId },\n        })\n      );\n    }\n  };\n\n  return (\n    <Item>\n      <Image\n        src={image.url}\n        alt=\"Документ\"\n        title=\"Відкрити зображення\"\n        onClick={() => setOpenModal(true)}\n      />\n      <DelBtn\n        type=\"button\"\n        title=\"Видалити\"\n        onClick={() => handleDeleteImage(image.id)}\n      >\n        <DelIcon />\n      </DelBtn>\n      <ModalOpenImage\n        isOpen={isOpenModal}\n        handleExitModal={handleExitModal}\n        image={image.url}\n      />\n    </Item>\n  );\n};\n","import { useState } from 'react';\nimport { List, Item, AddBtn } from './ImagesList.styled';\nimport { ModalAddEmployeeImage } from 'components/Modals/ModalAddEmployeeImage/ModalAddEmployeeImage';\nimport { ImagesItem } from '../ImagesItem/ImagesItem';\n\nexport const ImagesList = ({ employee }) => {\n  const [isOpenModal, setOpenModal] = useState(false);\n\n  const handleExitModal = () => {\n    setOpenModal(false);\n  };\n\n  return (\n    <>\n      <List>\n        {employee.images.map(image => (\n          <ImagesItem key={image.id} employeeId={employee._id} image={image} />\n        ))}\n        <Item>\n          <AddBtn\n            type=\"button\"\n            title=\"Додати зображення\"\n            onClick={() => setOpenModal(true)}\n          >\n            +\n          </AddBtn>\n        </Item>\n      </List>\n      <ModalAddEmployeeImage\n        id={employee._id}\n        handleExitModal={handleExitModal}\n        isOpen={isOpenModal}\n      />\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport {\n  updateEmployeeById,\n  deleteEmployeeById,\n} from '../../../../redux/employees/employeesOperations';\n\nimport { calculateAgeToNow } from '../../../../utils/calculateAgeToNow';\n\nimport {\n  Item,\n  Button,\n  Form,\n  EditIcon,\n  SaveIcon,\n  DeleteIcon,\n  Label,\n  Input,\n  Text,\n  Select,\n} from './EmployeesItem.styled';\nimport { ImagesList } from '../ImagesList/ImagesList';\n\nexport const EmployeesItem = ({ employee }) => {\n  const [isEdit, setEdit] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleDeleteEmployee = id => {\n    const confirmDelete = window.confirm(\n      'Ви впевнені, що хочете видалити працівника?'\n    );\n    if (confirmDelete) {\n      dispatch(deleteEmployeeById(id));\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      phone: employee.phone || '',\n      criminal: employee.criminal || false,\n      worksFromDate: employee.worksFromDate || '',\n    },\n    onSubmit: values => {\n      dispatch(updateEmployeeById({ _id: employee._id, data: values }));\n      setEdit(false);\n    },\n  });\n\n  return (\n    <Item>\n      <Form onSubmit={formik.handleSubmit}>\n        <Text>{`Ім'я: ${employee.name}`}</Text>\n        <Label>\n          Телефон:\n          <Input\n            required\n            type=\"text\"\n            id=\"phone\"\n            name=\"phone\"\n            value={formik.values.phone}\n            onChange={formik.handleChange}\n            disabled={!isEdit}\n          />\n        </Label>\n        <Label>\n          Судимість:\n          <Select\n            required\n            id=\"criminal\"\n            name=\"criminal\"\n            value={formik.values.criminal}\n            onChange={formik.handleChange}\n            disabled={!isEdit}\n          >\n            <option value={false}>Ні</option>\n            <option value={true}>Так</option>\n          </Select>\n        </Label>\n        {!isEdit && (\n          <Text>{`Працює: ${calculateAgeToNow(employee.worksFromDate)}`}</Text>\n        )}\n        {isEdit && (\n          <Label>\n            Працює:\n            <Input\n              required\n              type=\"date\"\n              id=\"worksFromDate\"\n              name=\"worksFromDate\"\n              value={formik.values.worksFromDate}\n              onChange={formik.handleChange}\n              disabled={!isEdit}\n            />\n          </Label>\n        )}\n\n        {isEdit && (\n          <Button type=\"submit\" title=\"Зберегти зміни\" top=\"40px\" right=\"8px\">\n            <SaveIcon />\n          </Button>\n        )}\n      </Form>\n      <Button\n        type=\"button\"\n        title=\"Редагувати\"\n        onClick={() => setEdit(!isEdit)}\n        top=\"8px\"\n        right=\"8px\"\n      >\n        <EditIcon />\n      </Button>\n      {!isEdit && (\n        <Button\n          type=\"button\"\n          title=\"Видалити\"\n          onClick={() => handleDeleteEmployee(employee._id)}\n          top=\"40px\"\n          right=\"8px\"\n        >\n          <DeleteIcon />\n        </Button>\n      )}\n      <ImagesList employee={employee} />\n    </Item>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectEmployees } from '../../../../redux/employees/employeesSelectors';\n\nimport { List } from './EmployeesList.styled';\nimport { EmployeesItem } from '../EmployeesItem/EmployeesItem';\n\nexport const EmployeesList = () => {\n  const employees = useSelector(selectEmployees);\n  return (\n    <List>\n      {employees.map(employee => (\n        <EmployeesItem key={employee._id} employee={employee} />\n      ))}\n    </List>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport { ModalLayout } from '../ModalLayout';\nimport { Title } from '../Modal.styles';\nimport {\n  Form,\n  Label,\n  Input,\n  FormCheckbox,\n} from 'components/Forms/Forms.styled';\nimport { MainButton } from 'components/Global/Global.styled';\n\nimport { addEmployee } from '../../../redux/employees/employeesOperations';\n\nexport const ModalAddEmployee = props => {\n  const dispatch = useDispatch();\n\n  const handleExitModal = () => {\n    props.handleExitModal(true);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      phone: '',\n      criminal: false,\n      worksFromDate: '',\n    },\n    onSubmit: values => {\n      dispatch(addEmployee(values));\n      handleExitModal();\n    },\n  });\n\n  return (\n    <ModalLayout handleExitModal={handleExitModal} isOpen={props.isOpen}>\n      <Title>Додати працівника</Title>\n      <Form onSubmit={formik.handleSubmit}>\n        <Input\n          required\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          label=\"Ім'я працівника\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <Input\n          required\n          type=\"tel\"\n          id=\"phone\"\n          name=\"phone\"\n          label=\"Номер телефона\"\n          value={formik.values.phone}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <Label>\n          Працює з:\n          <Input\n            required\n            type=\"date\"\n            id=\"worksFromDate\"\n            name=\"worksFromDate\"\n            value={formik.values.worksFromDate}\n            onChange={formik.handleChange}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Label>\n        <Label>\n          <FormCheckbox\n            checked={formik.values.criminal}\n            onChange={() =>\n              formik.setFieldValue('criminal', !formik.values.criminal)\n            }\n          />\n          Судимість\n        </Label>\n\n        <MainButton type=\"submit\" color=\"var(--black-color)\" margin={true}>\n          Додати\n        </MainButton>\n      </Form>\n    </ModalLayout>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Section,\n  SectionTitle,\n  MainButton,\n} from 'components/Global/Global.styled';\nimport { EmployeesList } from 'components/AdminPage/EmployeesPage/EmployeesList/EmployeesList';\nimport { ModalAddEmployee } from 'components/Modals/ModalAddEmployee/ModalAddEmployee';\nimport { Loading } from 'components/Loading/Loading';\n\nimport { getAllEmployees } from '../../redux/employees/employeesOperations';\nimport {\n  selectIsLoadingEmployees,\n  selectIsUpdating,\n} from '../../redux/employees/employeesSelectors';\n\nconst EmployeesPage = () => {\n  const isLoading = useSelector(selectIsLoadingEmployees);\n  const isUpdating = useSelector(selectIsUpdating);\n\n  const [isOpenModal, setOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllEmployees());\n  }, [dispatch]);\n\n  const handleExitModal = () => {\n    setOpenModal(false);\n  };\n\n  if (isLoading) {\n    return <Loading />;\n  }\n  return (\n    <Section paddingBottom={true}>\n      <MainButton\n        type=\"button\"\n        onClick={() => setOpenModal(true)}\n        color=\"var(--white-color)\"\n        position={true}\n      >\n        Додати працівника\n      </MainButton>\n      <SectionTitle>Працівники</SectionTitle>\n\n      <EmployeesList />\n\n      <ModalAddEmployee\n        handleExitModal={handleExitModal}\n        isOpen={isOpenModal}\n      />\n      {isUpdating && <Loading />}\n    </Section>\n  );\n};\n\nexport default EmployeesPage;\n","export const selectEmployees = state => state.employees.items;\n\nexport const selectIsLoadingEmployees = state => state.employees.isLoading;\n\nexport const selectIsUpdating = state => state.employees.isUpdating;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","Label","_templateObject3","LabelText","_templateObject4","Input","TextField","_templateObject5","FormSelect","Select","_templateObject6","SelectOption","MenuItem","_templateObject7","FormCheckbox","Checkbox","_templateObject8","MainContainer","AdminContainer","Section","props","paddingBottom","SectionTitle","MainButton","position","margin","color","MainLinkButton","Backdrop","isOpen","Modal","Title","Text","CloseButton","CloseIcon","AiOutlineClose","ModalLayout","_jsx","onClick","e","handleBackdropClick","children","_jsxs","handleExitModal","List","calculateAgeToNow","date","startDate","Date","endDate","years","getFullYear","months","getMonth","concat","Item","Button","top","right","EditIcon","FiEdit","SaveIcon","FiSave","DeleteIcon","FiTrash2","_templateObject9","_templateObject10","AddBtn","ModalAddEmployeeImage","_ref","id","_useState","useState","_useState2","_slicedToArray","image","setImage","dispatch","useDispatch","onSubmit","preventDefault","formData","FormData","append","addImageToEmployee","data","required","type","name","onChange","currentTarget","files","variant","size","Image","DelBtn","DelIcon","ModalOpenImage","target","src","alt","ImagesItem","employeeId","isOpenModal","setOpenModal","url","title","imageId","window","confirm","deleteImageFromEmployee","ImagesList","employee","_Fragment","images","map","_id","EmployeesItem","isEdit","setEdit","formik","useFormik","initialValues","phone","criminal","worksFromDate","values","updateEmployeeById","handleSubmit","value","handleChange","disabled","deleteEmployeeById","EmployeesList","employees","useSelector","selectEmployees","ModalAddEmployee","addEmployee","label","checked","setFieldValue","isLoading","selectIsLoadingEmployees","isUpdating","selectIsUpdating","useEffect","getAllEmployees","Loading","state","items"],"sourceRoot":""}