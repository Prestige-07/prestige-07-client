{"version":3,"file":"static/js/468.ee181ed5.chunk.js","mappings":"+WAUaA,GAPQC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8FAOVF,EAAAA,EAAAA,KAAWG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,8JAUlBE,EAAQJ,EAAAA,EAAAA,MAAYK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,gGAOpBI,EAAYN,EAAAA,EAAAA,EAAQO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,iCAIpBM,GAAQR,EAAAA,EAAAA,GAAOS,EAAAA,EAAPT,CAAiBU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,0BAIzBS,GAAaX,EAAAA,EAAAA,GAAOY,EAAAA,EAAPZ,CAAca,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,0BAI3BY,GAAed,EAAAA,EAAAA,GAAOe,EAAAA,EAAPf,CAAgBgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,QAE/Be,GAAejB,EAAAA,EAAAA,GAAOkB,EAAAA,EAAPlB,CAAgBmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,O,mNCvC/BkB,EAAgBpB,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+QAiB1BmB,EAAiBrB,EAAAA,EAAAA,IAAUG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,2LAW3BoB,EAAUtB,EAAAA,EAAAA,QAAcK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,wGAEjB,SAAAqB,GAAK,OAAIA,EAAMC,eAAa,MAAU,IAI7CC,EAAezB,EAAAA,EAAAA,GAASO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,8NAexBwB,EAAa1B,EAAAA,EAAAA,OAAaU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,gjBACnC,SAAAqB,GAAK,OACLA,EAAMI,UAAQ,2DAIf,IAES,SAAAJ,GAAK,OAAIA,EAAMK,QAAM,QAAY,IAIlC,SAAAL,GAAK,OAAKA,EAAMM,MAAQN,EAAMM,MAAQ,oBAAoB,IAuBxDC,EAAiB9B,EAAAA,EAAAA,EAAQa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,ynB,6NCnFzB6B,EAAW/B,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+cAmBlB,SAAAqB,GAAK,OAAKA,EAAMS,OAAS,UAAY,QAAQ,IAChD,SAAAT,GAAK,OAAKA,EAAMS,OAAS,IAAM,GAAG,IAC3B,SAAAT,GAAK,OAAKA,EAAMS,OAAS,OAAS,MAAM,IAC7C,SAAAT,GAAK,OAAKA,EAAMS,OAAS,WAAa,YAAY,IAGpDC,EAAQjC,EAAAA,EAAAA,IAAUG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,2VAqBlBgC,EAAQlC,EAAAA,EAAAA,GAASK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,8FAOjBiC,EAAOnC,EAAAA,EAAAA,EAAQO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,mFAMfkC,EAAcpC,EAAAA,EAAAA,OAAaU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,oIAW3BmC,GAAYrC,EAAAA,EAAAA,GAAOsC,EAAAA,IAAPtC,CAAsBa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,0C,8ECvElCqC,EAAc,SAAAhB,GACzB,OACEiB,EAAAA,EAAAA,KAACT,EAAAA,GAAQ,CACPU,QAAS,SAAAC,GACPnB,EAAMoB,qBAAuBpB,EAAMoB,oBAAoBD,EACzD,EACAV,OAAQT,EAAMS,OAAOY,UAErBC,EAAAA,EAAAA,MAACZ,EAAAA,GAAK,CAAAW,SAAA,EACJJ,EAAAA,EAAAA,KAACJ,EAAAA,GAAW,CAACK,QAAS,kBAAMlB,EAAMuB,iBAAiB,EAACF,UAClDJ,EAAAA,EAAAA,KAACH,EAAAA,GAAS,MAEXd,EAAMqB,aAIf,C,yJCfaG,EAAO/C,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2LAYhB8C,EAAOhD,EAAAA,EAAAA,GAASG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,gPAchB+C,EAAajD,EAAAA,EAAAA,IAAUK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,uEAMvBgD,EAAQlD,EAAAA,EAAAA,IAAUO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,QAElBiD,EAAenD,EAAAA,EAAAA,OAAaU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,sIAU5BkD,GAAapD,EAAAA,EAAAA,GAAOqD,EAAAA,IAAPrD,CAAgBa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,0D,6BChC7BoD,EAAc,WACzB,IAAMC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAWC,EAAAA,EAAAA,MAWjB,OACEnB,EAAAA,EAAAA,KAACO,EAAI,CAAAH,SACFW,EAAQK,KAAI,SAAAC,GAAI,OACfhB,EAAAA,EAAAA,MAACG,EAAI,CAAAJ,SAAA,EACHJ,EAAAA,EAAAA,KAACS,EAAU,CAAAL,UACTJ,EAAAA,EAAAA,KAACU,EAAK,CACJY,IAAKD,EAAKE,YAAYC,IACtBC,IAAKJ,EAAKE,YAAYE,KAAO,oEAGjCzB,EAAAA,EAAAA,KAACW,EAAY,CACXe,MAAM,mDACNzB,QAAS,kBArBQ0B,EAqBiBN,EAAKO,SApBzBC,OAAOC,QAC3B,oOAGAZ,GAASa,EAAAA,EAAAA,IAAkBJ,KALJ,IAAAA,CAqB0B,EAACvB,UAE5CJ,EAAAA,EAAAA,KAACY,EAAU,QAXJS,EAAKO,IAaT,KAIf,E,wCCrCaI,EAAiB,SAAAjD,GAC5B,IAAAkD,GAA4BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAElBjB,GAAWC,EAAAA,EAAAA,MAEXb,EAAkB,WACtBvB,EAAMuB,iBAAgB,EACxB,EAEMiC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,UAAW,IAEbC,SAAU,SAAAC,GACR,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,SAAUV,GAC1BQ,EAASE,OAAO,YAAaH,EAAOF,WACpCxB,GAAS8B,EAAAA,EAAAA,IAAeH,IACxBvC,GACF,IAGF,OACED,EAAAA,EAAAA,MAACN,EAAAA,EAAW,CAACO,gBAAiBA,EAAiBd,OAAQT,EAAMS,OAAOY,SAAA,EAClEJ,EAAAA,EAAAA,KAACN,EAAAA,GAAK,CAAAU,SAAC,mEACPC,EAAAA,EAAAA,MAAC9C,EAAAA,GAAI,CAACoF,SAAUJ,EAAOU,aAAa7C,SAAA,EAClCC,EAAAA,EAAAA,MAACzC,EAAAA,GAAK,CAAAwC,SAAA,CAAC,yFAELJ,EAAAA,EAAAA,KAAChC,EAAAA,GAAK,CACJkF,UAAQ,EACRC,KAAK,OACLxB,GAAG,cACHyB,KAAK,cACLC,MAAOd,EAAOK,OAAOrB,YACrB+B,SAAU,SAAApD,GAAC,OAAIoC,EAAUpC,EAAEqD,cAAcC,MAAM,GAAG,EAClDC,QAAQ,WACRC,KAAK,cAGTrD,EAAAA,EAAAA,MAACzC,EAAAA,GAAK,CAAAwC,SAAA,CAAC,2DAELJ,EAAAA,EAAAA,KAAChC,EAAAA,GAAK,CACJmF,KAAK,OACLxB,GAAG,YACHyB,KAAK,YACLC,MAAOd,EAAOK,OAAOF,UACrBY,SAAUf,EAAOoB,aACjBF,QAAQ,WACRC,KAAK,cAGT1D,EAAAA,EAAAA,KAACd,EAAAA,GAAU,CAACiE,KAAK,SAAS9D,MAAM,qBAAqBD,QAAQ,EAAKgB,SAAC,8CAM3E,E,UCtBA,EA/BgB,WACd,IAAA6B,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5C2B,EAAWzB,EAAA,GAAE0B,EAAY1B,EAAA,GAC1B2B,GAAY9C,EAAAA,EAAAA,IAAY+C,EAAAA,IAExB7C,GAAWC,EAAAA,EAAAA,OAEjB6C,EAAAA,EAAAA,YAAU,WACR9C,GAAS+C,EAAAA,EAAAA,MACX,GAAG,CAAC/C,IAMJ,OACEb,EAAAA,EAAAA,MAACvB,EAAAA,GAAO,CAACE,eAAe,EAAKoB,SAAA,EAC3BJ,EAAAA,EAAAA,KAACd,EAAAA,GAAU,CACTiE,KAAK,SACLlD,QAAS,kBAAM4D,GAAa,EAAK,EACjC1E,UAAU,EAAKiB,SAChB,uGAGDJ,EAAAA,EAAAA,KAACf,EAAAA,GAAY,CAAAmB,SAAC,uGACdJ,EAAAA,EAAAA,KAACc,EAAW,KACZd,EAAAA,EAAAA,KAACgC,EAAc,CAAC1B,gBAfI,WACtBuD,GAAa,EACf,EAasDrE,OAAQoE,IACzDE,IAAa9D,EAAAA,EAAAA,KAACkE,EAAAA,EAAO,MAG5B,C,gFC5CO,IAAMjD,EAAgB,SAAAkD,GAAK,OAAIA,EAAMpD,QAAQqD,KAAM,EAE7CL,EAAkB,SAAAI,GAAK,OAAIA,EAAMpD,QAAQ+C,SAAU,C","sources":["components/Forms/Forms.styled.jsx","components/Global/Global.styled.jsx","components/Modals/Modal.styles.jsx","components/Modals/ModalLayout.jsx","components/AdminPage/GalleryPage/GalleryList/GalleryList.styled.jsx","components/AdminPage/GalleryPage/GalleryList/GalleryList.jsx","components/Modals/ModalAddPhotos/ModalAddPhotos.jsx","pages/Gallery/Gallery.jsx","redux/gallery/gallerySelectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Select, TextField, Checkbox, MenuItem } from '@mui/material';\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  text-align: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 12px;\n  color: black;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  max-width: 100%;\n  color: var(--label-color);\n  font-size: 12px;\n`;\n\nexport const LabelText = styled.p`\n  margin-bottom: 4px;\n`;\n\nexport const Input = styled(TextField)`\n  width: 100%;\n`;\n\nexport const FormSelect = styled(Select)`\n  width: 100%;\n`;\n\nexport const SelectOption = styled(MenuItem)``;\n\nexport const FormCheckbox = styled(Checkbox)``;\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  max-width: 480px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const AdminContainer = styled.div`\n  width: 100%;\n  max-width: 1600px;\n  @media screen and (min-width: 768px) {\n    padding: 0 30px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const Section = styled.section`\n  padding-top: 80px;\n  padding-bottom: ${props => props.paddingBottom && `80px`};\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  ${props =>\n    props.position &&\n    `position: absolute;\n    top: 20px;\n    right: 20px;\n  `};\n\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n  box-shadow: var(--button-shadow);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  border-radius: 25px;\n  border: var(--button-border);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const MainLinkButton = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-height: 50px;\n  min-width: 200px;\n\n  box-shadow: var(--button-shadow);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  @media screen and (min-width: 1200px) {\n    font-size: 12px;\n  }\n\n  color: var(--white-color);\n  background-color: transparent;\n\n  border: var(--button-border);\n  border-radius: 25px;\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { AiOutlineClose } from 'react-icons/ai';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: var(--backdrop-color);\n  backdrop-filter: blur(10px);\n\n  transition: transform var(--transition), opacity var(--transition),\n    visibility var(--transition);\n\n  visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n  opacity: ${props => (props.isOpen ? '1' : '0')};\n  pointer-events: ${props => (props.isOpen ? 'auto' : 'none')};\n  transform: ${props => (props.isOpen ? 'scale(1)' : 'scale(1.5)')};\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n\n  padding: 30px;\n  max-width: 480px;\n  width: 100%;\n\n  background-color: var(--white-color);\n\n  border: 4px solid var(--accent-color);\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  text-align: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-size: 20px;\n  color: var(--black-color);\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  background-color: transparent;\n  border: none;\n\n  cursor: pointer;\n`;\n\nexport const CloseIcon = styled(AiOutlineClose)`\n  width: 30px;\n  height: 30px;\n`;\n","import { Backdrop, Modal, CloseButton, CloseIcon } from './Modal.styles';\n\nexport const ModalLayout = props => {\n  return (\n    <Backdrop\n      onClick={e => {\n        props.handleBackdropClick && props.handleBackdropClick(e);\n      }}\n      isOpen={props.isOpen}\n    >\n      <Modal>\n        <CloseButton onClick={() => props.handleExitModal()}>\n          <CloseIcon />\n        </CloseButton>\n        {props.children}\n      </Modal>\n    </Backdrop>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FiTrash2 } from 'react-icons/fi';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n  list-style: none;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  max-width: 93%;\n  gap: 12px;\n  padding: 8px;\n\n  background-color: var(--secondary-bg-color);\n  border-radius: 8px;\n\n  @media screen and (min-width: 768px) {\n    width: calc(100% / 2 - 50px);\n  }\n`;\n\nexport const ImageThumb = styled.div`\n  width: 100%;\n  overflow: hidden;\n  aspect-ratio: 16/12;\n`;\n\nexport const Image = styled.img``;\n\nexport const DeleteButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: -40px;\n\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const DeleteIcon = styled(FiTrash2)`\n  width: 30px;\n  height: 30px;\n  color: red;\n`;\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  List,\n  Item,\n  ImageThumb,\n  Image,\n  DeleteButton,\n  DeleteIcon,\n} from './GalleryList.styled';\n\nimport { deletePhotosGroup } from '../../../../redux/gallery/galleryOperations';\nimport { selectGallery } from '../../../../redux/gallery/gallerySelectors';\n\nexport const GalleryList = () => {\n  const gallery = useSelector(selectGallery);\n  const dispatch = useDispatch();\n\n  const handleDeletePhotos = id => {\n    const confirmDelete = window.confirm(\n      'Ви впевнені, що хочете видалити зображення?'\n    );\n    if (confirmDelete) {\n      dispatch(deletePhotosGroup(id));\n    }\n  };\n\n  return (\n    <List>\n      {gallery.map(item => (\n        <Item key={item._id}>\n          <ImageThumb>\n            <Image\n              src={item.beforePhoto.url}\n              alt={item.beforePhoto.alt || 'Зображення'}\n            />\n          </ImageThumb>\n          <DeleteButton\n            title=\"Видалити\"\n            onClick={() => handleDeletePhotos(item._id)}\n          >\n            <DeleteIcon />\n          </DeleteButton>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport { ModalLayout } from '../ModalLayout';\nimport { Title } from '../Modal.styles';\nimport { Form, Label, Input } from 'components/Forms/Forms.styled';\nimport { MainButton } from 'components/Global/Global.styled';\n\nimport { addPhotosGroup } from '../../../redux/gallery/galleryOperations';\n\nexport const ModalAddPhotos = props => {\n  const [before, setBefore] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const handleExitModal = () => {\n    props.handleExitModal(true);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      beforeAlt: '',\n    },\n    onSubmit: values => {\n      const formData = new FormData();\n      formData.append('before', before);\n      formData.append('beforeAlt', values.beforeAlt);\n      dispatch(addPhotosGroup(formData));\n      handleExitModal();\n    },\n  });\n\n  return (\n    <ModalLayout handleExitModal={handleExitModal} isOpen={props.isOpen}>\n      <Title>Додати фото</Title>\n      <Form onSubmit={formik.handleSubmit}>\n        <Label>\n          Прикріпити фото\n          <Input\n            required\n            type=\"file\"\n            id=\"beforePhoto\"\n            name=\"beforePhoto\"\n            value={formik.values.beforePhoto}\n            onChange={e => setBefore(e.currentTarget.files[0])}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Label>\n        <Label>\n          Назва фото\n          <Input\n            type=\"text\"\n            id=\"beforeAlt\"\n            name=\"beforeAlt\"\n            value={formik.values.beforeAlt}\n            onChange={formik.handleChange}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Label>\n        <MainButton type=\"submit\" color=\"var(--black-color)\" margin={true}>\n          Додати\n        </MainButton>\n      </Form>\n    </ModalLayout>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Section,\n  SectionTitle,\n  MainButton,\n} from 'components/Global/Global.styled';\nimport { GalleryList } from 'components/AdminPage/GalleryPage/GalleryList/GalleryList';\nimport { ModalAddPhotos } from 'components/Modals/ModalAddPhotos/ModalAddPhotos';\nimport { Loading } from 'components/Loading/Loading';\n\nimport { getGallery } from '../../redux/gallery/galleryOperations';\nimport { selectIsLoading } from '../../redux/gallery/gallerySelectors';\n\nconst Gallery = () => {\n  const [isOpenModal, setOpenModal] = useState(false);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getGallery());\n  }, [dispatch]);\n\n  const handleExitModal = () => {\n    setOpenModal(false);\n  };\n\n  return (\n    <Section paddingBottom={true}>\n      <MainButton\n        type=\"button\"\n        onClick={() => setOpenModal(true)}\n        position={true}\n      >\n        Додати зображення\n      </MainButton>\n      <SectionTitle>Галерея зображень</SectionTitle>\n      <GalleryList />\n      <ModalAddPhotos handleExitModal={handleExitModal} isOpen={isOpenModal} />\n      {isLoading && <Loading />}\n    </Section>\n  );\n};\n\nexport default Gallery;\n","export const selectGallery = state => state.gallery.items;\n\nexport const selectIsLoading = state => state.gallery.isLoading;\n\nexport const selectError = state => state.gallery.error;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","Label","_templateObject3","LabelText","_templateObject4","Input","TextField","_templateObject5","FormSelect","Select","_templateObject6","SelectOption","MenuItem","_templateObject7","FormCheckbox","Checkbox","_templateObject8","MainContainer","AdminContainer","Section","props","paddingBottom","SectionTitle","MainButton","position","margin","color","MainLinkButton","Backdrop","isOpen","Modal","Title","Text","CloseButton","CloseIcon","AiOutlineClose","ModalLayout","_jsx","onClick","e","handleBackdropClick","children","_jsxs","handleExitModal","List","Item","ImageThumb","Image","DeleteButton","DeleteIcon","FiTrash2","GalleryList","gallery","useSelector","selectGallery","dispatch","useDispatch","map","item","src","beforePhoto","url","alt","title","id","_id","window","confirm","deletePhotosGroup","ModalAddPhotos","_useState","useState","_useState2","_slicedToArray","before","setBefore","formik","useFormik","initialValues","beforeAlt","onSubmit","values","formData","FormData","append","addPhotosGroup","handleSubmit","required","type","name","value","onChange","currentTarget","files","variant","size","handleChange","isOpenModal","setOpenModal","isLoading","selectIsLoading","useEffect","getGallery","Loading","state","items"],"sourceRoot":""}